{"version":3,"sources":["registerServiceWorker.js","pages/Home/style.js","icons/movieIcon.js","pages/Home/index.js","redux/selectors/index.js","components/MovieResult/style.js","components/MovieResult/index.js","pages/results/index.js","redux/actions/search.js","consts/actionTypes.js","pages/MovieDetail/index.js","App.js","redux/reducers/search.js","redux/reducers/index.js","redux/api/index.js","redux/sagas/search.js","redux/sagas/index.js","redux/store/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","centeredStyleObj","display","alignItems","justifyContent","makeStyles","container","height","flexDirection","cardContainer","width","padding","title","fontSize","titleGridContainer","textFieldSearch","searchButton","marginLeft","buttonsContainer","marginTop","movieIcon","props","SvgIcon","d","fill","history","useState","searchText","setSearchText","classes","styles","Container","className","Card","Grid","Typography","TextField","value","placeholder","onChange","event","target","Button","variant","onClick","color","size","push","movieResults","get","marginBottom","poster","titlesContainer","paddingLeft","withRouter","Title","Year","Type","imdbID","Poster","style","item","src","alt","dispatch","useDispatch","movies","useSelector","isLoading","isSearchLoading","isLooked","setIsLooked","useEffect","movieName","queryString","parse","search","type","payload","map","index","key","CircularProgress","movieResult","movieResultSelector","movieId","params","id","Actors","Director","Country","Rated","Awards","Plot","App","store","exact","path","component","Home","Results","MovieDetail","initialState","rootReducer","combineReducers","action","results","data","movie","apiCall","url","headers","method","axios","searchMovie","searchMovieById","call","put","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","configureStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0122b80.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst centeredStyleObj = {\r\n        display: 'flex',\r\n        alignItems:'center',\r\n        justifyContent: 'center',\r\n}\r\nexport default makeStyles ({\r\n    container: {\r\n        height: '100vh',\r\n        flexDirection: 'column',\r\n        ...centeredStyleObj\r\n    },\r\n    cardContainer: {\r\n        flexDirection: 'column',\r\n        width:400,\r\n        height:200,\r\n        padding: '2rem',\r\n        ...centeredStyleObj\r\n    },\r\n    title: {\r\n        fontSize: '4rem'\r\n    },\r\n    titleGridContainer: {\r\n        ...centeredStyleObj\r\n    },\r\n    textFieldSearch: {\r\n        width: '90%'\r\n    },\r\n    searchButton: {\r\n        marginLeft: '.5rem'\r\n    },\r\n    buttonsContainer: {\r\n        marginTop: '.5rem'\r\n    }, \r\n    movieIcon:{\r\n        fontSize:'4rem',\r\n    }\r\n\r\n});","import { SvgIcon } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default props =>(\r\n    <SvgIcon {...props}>\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z\"/>\r\n    </SvgIcon>\r\n);","import React, { useState} from 'react';\nimport { Container, Typography, Card, Grid, TextField, Button } from '@material-ui/core';\nimport styles from './style';\nimport { MovieIcon } from '../../icons';\n\nexport default ({ history }) =>{\n    // console.log(history)\n    const [searchText, setSearchText] = useState('');\n    const classes = styles()\n    const handleSearchTextChange = event =>{\n        setSearchText(event.target.value)\n    };\n\n    const handleCleanTextClick = event =>{\n        setSearchText('')\n    };\n\n    const handleSearchTextClick = event =>{\n        history.push(`/results?movieName=${searchText}`)\n    };\n    \n    return(\n        <Container className={classes.container}>\n            <Card className={classes.cardContainer}>\n                <Grid container className={classes.titleGridContainer}>\n                    <Grid>\n                        <Typography className={classes.title}>Bienvenido!</Typography>\n                    </Grid>\n                    <Grid>\n                        <MovieIcon className={ classes.movieIcon}/>\n                    </Grid>\n                </Grid>\n                <TextField\n                value={searchText}\n                placeholder=\"Buscar...\"\n                className={classes.textFieldSearch}\n                onChange={handleSearchTextChange}\n                />\n                <Grid className={classes.buttonsContainer}>\n                    <Button variant=\"contained\" onClick={handleCleanTextClick}>Limpiar</Button>\n                    <Button variant=\"contained\" className={classes.searchButton} color=\"primary\" size=\"large\" onClick={handleSearchTextClick}>Buscar</Button>\n                </Grid>\n\n            </Card>\n        </Container>\n    )\n}","import { get } from 'lodash';\r\n\r\nexport const isSearchLoading = state => get(state,'search.isLoading');\r\nexport const movieResults = state => get(state,'search.movieResults.Search');\r\nexport const movieResult = state => get(state,'search.movieResult');","import { makeStyles } from '@material-ui/styles';\r\n\r\nexport default makeStyles({\r\n    cardContainer:{\r\n        marginBottom:8\r\n    },\r\n    poster:{\r\n        width:120\r\n    },\r\n    titlesContainer:{\r\n        paddingLeft:8\r\n    }\r\n})","import React from 'react';\r\nimport { Card, Grid, Typography, Button } from '@material-ui/core';\r\nimport style from './style';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst MovieResult = ({ Title, Year, Type, imdbID, Poster, history }) =>{\r\n    const classes= style()\r\n    const handleWatchMore=()=>{\r\n        history.push(`/movie/${imdbID}`)\r\n    }\r\n    return(\r\n        <Card className={classes.cardContainer}>\r\n            <Grid container>\r\n                <Grid item>\r\n                    <img src={Poster} alt={Title} className={classes.poster}/>\r\n                </Grid>\r\n                <Grid item className={classes.titlesContainer}>\r\n                    <Typography>{Title}</Typography>\r\n                    <Typography>{Year}</Typography>\r\n                    <Typography>{Type}</Typography>\r\n                    <Button color=\"primary\" variant=\"contained\" onClick={handleWatchMore}>Ver más</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default withRouter(MovieResult);","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, CircularProgress } from '@material-ui/core';\r\nimport queryString from 'query-string';\r\n\r\nimport { searchMovie } from '../../redux/actions/search';\r\nimport { movieResults, isSearchLoading } from '../../redux/selectors';\r\nimport MovieResult from '../../components/MovieResult';\r\n\r\nexport default ({ location }) =>{\r\n    const dispatch = useDispatch();\r\n    const movies = useSelector(state => movieResults(state));\r\n    const isLoading = useSelector(state => isSearchLoading(state));\r\n    const [isLooked, setIsLooked ] =useState(false)\r\n    \r\n    useEffect(()=>{\r\n        const { movieName } = queryString.parse(location.search);\r\n        if(movieResults && !isLooked ){\r\n            setIsLooked(true)\r\n            dispatch(searchMovie({ movieName }));\r\n        }\r\n        \r\n    });\r\n\r\n    const renderMovies = () =>{\r\n        if(movies){\r\n            return movies.map((value, index) => <MovieResult key={index} {...value}/>);\r\n        }else if(isLoading){\r\n            return <CircularProgress size={100} color=\"primary\"/>\r\n        }\r\n        return <div/>\r\n    };\r\n    return(\r\n        <Container>\r\n            {renderMovies()}\r\n        </Container>\r\n    )\r\n}","import { SEARCH_MOVIE_START, SEARCH_MOVIE_BY_ID_START } from '../../consts/actionTypes';\r\n\r\nexport const searchMovie = payload =>({\r\n    type: SEARCH_MOVIE_START,\r\n    payload\r\n});\r\n\r\nexport const searchMovieById = payload =>({\r\n    type: SEARCH_MOVIE_BY_ID_START,\r\n    payload\r\n});","export const SEARCH_MOVIE_START = 'SEARCH_MOVIE_START';\nexport const SEARCH_MOVIE_ERROR = 'SEARCH_MOVIE_ERROR';\nexport const SEARCH_MOVIE_COMPLETE = 'SEARCH_MOVIE_COMPLETE';\n\nexport const SEARCH_MOVIE_BY_ID_START = 'SEARCH_MOVIE_BY_ID_START';\nexport const SEARCH_MOVIE_BY_ID_ERROR = 'SEARCH_MOVIE_BY_ID_ERROR';\nexport const SEARCH_MOVIE_BY_ID_COMPLETE = 'SEARCH_MOVIE_BY_ID_COMPLETE';","import React, { useEffect } from 'react';\r\nimport { Container,CircularProgress, Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { movieResult as movieResultSelector } from '../../redux/selectors';\r\nimport { searchMovieById } from '../../redux/actions/search';\r\n\r\nexport default ({ match })=>{\r\n    const dispatch = useDispatch();\r\n    const movieResult = useSelector(state=>movieResultSelector(state));\r\n    \r\n    useEffect(()=>{\r\n        const movieId=match.params.id;\r\n        if(!movieResult || movieResult && movieResult.imdbID !== movieId){\r\n            dispatch(searchMovieById({ movieId }));\r\n        }\r\n    });\r\n \r\n    if(!movieResult){\r\n        return <CircularProgress size={100} color={\"primary\"} />;\r\n    }\r\n    \r\n    return(\r\n        <Container>\r\n            <Typography variant =\"h3\">{movieResult.Title}</Typography>\r\n            <img src={movieResult.Poster} alt={movieResult.Title} />\r\n            <Typography><strong>Actores:</strong> {movieResult.Actors}</Typography>\r\n            <Typography><strong>Director:</strong> {movieResult.Director}</Typography>\r\n            <Typography><strong>País:</strong> {movieResult.Country}</Typography>\r\n            <Typography><strong>Clasificación:</strong> {movieResult.Rated}</Typography>\r\n            <Typography><strong>Premios:</strong> {movieResult.Awards}</Typography>\r\n            <Typography><strong>Sinopsis:</strong> {movieResult.Plot}</Typography>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Home from './pages/Home';\nimport Results from './pages/results';\nimport MovieDetail from './pages/MovieDetail';\n\nconst App = ({ store }) => (\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route path=\"/results\" component={Results}/>\n\t\t\t\t<Route path=\"/movie/:id\" component={MovieDetail}/>\n\t\t\t</div>\n\t\t</Router>\n\t</Provider>\n);\n\nApp.propTypes = {\n\tstore: PropTypes.object.isRequired\n};\n\nexport default App;\n","import { get } from 'lodash';\r\nimport { SEARCH_MOVIE_START, SEARCH_MOVIE_ERROR, SEARCH_MOVIE_COMPLETE, SEARCH_MOVIE_BY_ID_COMPLETE,SEARCH_MOVIE_BY_ID_START,SEARCH_MOVIE_BY_ID_ERROR } from '../../consts/actionTypes';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state= initialState, action){\r\n    switch(action.type){\r\n        case SEARCH_MOVIE_START:\r\n            return {...state, isLoading:true };\r\n            break;\r\n        \r\n        case SEARCH_MOVIE_ERROR:\r\n            return {...state, isLoading:false, movieResults:null };\r\n            break;\r\n        \r\n        case SEARCH_MOVIE_COMPLETE:\r\n            return {...state, isLoading:false, movieResults: action.results.data};\r\n            break;\r\n\r\n        case SEARCH_MOVIE_BY_ID_START:\r\n            return {...state, isLoading:true, movieResult:null };\r\n                break;\r\n            \r\n        case SEARCH_MOVIE_BY_ID_ERROR:\r\n            return {...state, isLoading:false, movieResult:null };\r\n            break;\r\n            \r\n        case SEARCH_MOVIE_BY_ID_COMPLETE:\r\n            return {...state, isLoading:false, movieResult: action.movie.data};\r\n            break;\r\n        default:\r\n            return {...state};\r\n    }\r\n}","import { combineReducers } from 'redux';\nimport search from './search';\n\nconst rootReducer = combineReducers({\n\tsearch\n});\n\nexport default rootReducer;\n","import axios from 'axios';\r\n\r\nconst baseURL ='https://www.omdbapi.com/?apikey=ffd0c3a5';\r\n\r\nexport const apiCall = ( url, data, headers, method ) => axios({\r\n    method,\r\n    url: baseURL + url,\r\n    data,\r\n    headers\r\n});","import { put, call, takeLatest } from 'redux-saga/effects';\r\nimport { SEARCH_MOVIE_START, SEARCH_MOVIE_ERROR, SEARCH_MOVIE_COMPLETE, SEARCH_MOVIE_BY_ID_COMPLETE,SEARCH_MOVIE_BY_ID_START,SEARCH_MOVIE_BY_ID_ERROR } from '../../consts/actionTypes';\r\n\r\nimport { apiCall } from '../api'\r\n\r\nexport function* searchMovie({ payload }){\r\n    try{\r\n        const results = yield call(apiCall, `&s=${payload.movieName}`, null, null, 'GET');\r\n        yield put({ type: SEARCH_MOVIE_COMPLETE, results });\r\n    }catch (error){\r\n        yield put({ type: SEARCH_MOVIE_ERROR, error});\r\n    }\r\n}\r\n\r\nexport function* searchMovieById({ payload }){\r\n    try {\r\n        const movie = yield call(apiCall, `&i=${payload.movieId}`, null, null, 'GET');\r\n        yield put({ type: SEARCH_MOVIE_BY_ID_COMPLETE, movie});\r\n    } catch (error) {\r\n        yield put({ type:SEARCH_MOVIE_BY_ID_ERROR, error});\r\n    }\r\n}\r\n\r\nexport default function* search(){\r\n    yield takeLatest(SEARCH_MOVIE_START, searchMovie);\r\n    yield takeLatest(SEARCH_MOVIE_BY_ID_START, searchMovieById);\r\n}","import { all } from 'redux-saga/effects';\nimport search from './search';\n\nexport default function* rootSaga() {\n\tyield all([\n\t\tsearch()\n\t]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n\tconst sagaMiddleware = createSagaMiddleware();\n\treturn {\n\t\t...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\n\t\trunSaga: sagaMiddleware.run(rootSaga)\n\t};\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport App from './App';\n\nimport configureStore from './redux/store';\nconst store = configureStore();\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}